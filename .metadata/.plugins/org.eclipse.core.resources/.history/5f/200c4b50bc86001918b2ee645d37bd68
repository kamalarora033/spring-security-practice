package com.security.practice.service;

import java.util.Collection;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.authority.AuthorityUtils;
import org.springframework.security.core.userdetails.User;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.stereotype.Service;

import com.security.practice.repository.UserRepositoryDAO;
import com.spring.security.practice.entity.Users;

@Service
public class CustomUserDetails implements UserDetailsService{

	@Autowired
	UserRepositoryDAO userRepositoryDAO;
	
	@Override
	public UserDetails loadUserByUsername(String username) {
		Users user = userRepositoryDAO.findByUsername(username).orElseThrow(()->new UsernameNotFoundException("Username "+username+" not found."));
		return new User(user.getUsername(), user.getPassword(), getAuthorities(user)) ;
	}
	
	private static Collection<? extends GrantedAuthority> getAuthorities(Users user){
		String [] authorities = user.getAuthorities().stream().map(role-> role.getAuthorityName().toString()).toArray(String[]::new);
		return AuthorityUtils.createAuthorityList(authorities);
	}

}
